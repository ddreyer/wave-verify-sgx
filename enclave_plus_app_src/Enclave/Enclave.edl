/*

Copyright 2018 Intel Corporation

This software and the related documents are Intel copyrighted materials,
and your use of them is governed by the express license under which they
were provided to you (License). Unless the License provides otherwise,
you may not use, modify, copy, publish, distribute, disclose or transmit
this software or the related documents without Intel's prior written
permission.

This software and the related documents are provided as is, with no
express or implied warranties, other than those that are expressly stated
in the License.

*/

#ifndef _WIN32
#include "config.h"
#endif

enclave {
	include "sgx_trts.h"
	include "sgx_utils.h"
	include "sgx_tkey_exchange.h"
	include "time.h"

	from "sgx_tkey_exchange.edl" import *;
	from "sgx_tsgxssl.edl" import *;

	trusted {
#ifndef _WIN32
		include "config.h"
#endif

		public sgx_status_t enclave_ra_init(sgx_ec256_public_t key, int b_pse,
			[out] sgx_ra_context_t *ctx);

		public sgx_status_t ecall_verify_proof([in,size=cipher_size] char *str,
        	size_t cipher_size);

		public sgx_status_t enclave_ra_get_key_hash(
			[out] sgx_status_t *get_keys_status, sgx_ra_context_t ctx,
			sgx_ra_key_type_t type, [out] sgx_sha256_hash_t *hash);

		public sgx_status_t enclave_ra_close(sgx_ra_context_t ctx);
	};

	untrusted {
#ifndef _WIN32
		include "config.h"
#endif
		void ocall_print([in, string]const char* str);

		[cdecl,dllimport] time_t timegm_ocall([in,out]struct tm *tm);

		[cdecl,dllimport] time_t mktime([in]struct tm *tm);

		[cdecl]int gmtime_r_ocall([in]const time_t *tloc, [in]struct tm *result);

		[cdecl]int localtime_r_ocall([in]const time_t *tloc, [in]struct tm *result);

		[cdecl]long GMTOFF(struct tm a);

		[cdecl]long random();
	};
};


